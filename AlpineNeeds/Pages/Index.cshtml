@page
@using System.Globalization
@model IndexModel
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = Localizer["Home Page"];
    ViewData["Description"] = Localizer["Alpine Needs - Your premier destination for high-quality outdoor gear and equipment. Shop camping, hiking and climbing equipment."];
}

@section Styles {
    <style>
        /* Hero Section Styles */
        .hero-section {
            position: relative;
            height: 500px;
            overflow: hidden;
        }
        
        .hero-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        
        .hero-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.4);
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            text-align: center;
            color: white;
            padding: 0 15px;
        }
        
        .hero-heading {
            font-size: 3rem;
            font-weight: 700;
            margin-bottom: 1.5rem;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
        }
        
        /* Introduction Section Styles */
        .introduction-section {
            padding: 5rem 0;
        }
        
        .store-image {
            max-height: 350px;
            object-fit: cover;
            border-radius: 8px;
        }
        
        /* Featured Products Section Styles */
        .featured-products {
            background-color: #f8f9fa;
            padding: 5rem 0;
        }
        
        .carousel-control-prev-icon, .carousel-control-next-icon {
            background-color: rgba(0, 0, 0, 0.3);
            border-radius: 50%;
            padding: 10px;
        }
        
        /* Categories Preview Styles */
        .categories-preview {
            padding: 5rem 0;
        }
        
        .category-card {
            position: relative;
            overflow: hidden;
            border-radius: 8px;
            transition: transform 0.3s;
            margin-bottom: 30px;
            height: 200px;
        }
        
        .category-card:hover {
            transform: translateY(-5px);
        }
        
        .category-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s;
        }
        
        .category-card:hover .category-image {
            transform: scale(1.05);
        }
        
        .category-overlay {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            background: linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0) 100%);
            color: white;
            padding: 20px;
            text-align: center;
        }
        
        .category-name {
            font-weight: 600;
            font-size: 1.25rem;
            margin: 0;
        }
        
        
        /* Responsive adjustments */
        @@media (max-width: 768px) {
            .hero-heading {
                font-size: 2rem;
            }
        }
    </style>
}


<!-- Featured Products Section -->
<section class="featured-products">
    <div class="container">
        <h2 class="text-center mb-5">@Localizer["Featured Products"]</h2>
        
        @if (Model.FeaturedProducts.Any())
        {
            <div id="featuredProductsCarousel" class="carousel slide" data-bs-ride="carousel" data-bs-interval="5000">
                <div class="carousel-inner">
                    @{
                        // Group products into sets of 3 for each carousel slide
                        var productGroups = Model.FeaturedProducts
                            .Select((product, index) => new { Product = product, Index = index })
                            .GroupBy(x => x.Index / 3)
                            .Select(group => group.Select(x => x.Product).ToList())
                            .ToList();
                    }
                    
                    @for (int i = 0; i < productGroups.Count; i++)
                    {
                        <div class="carousel-item @(i == 0 ? "active" : "")">
                            <div class="row">
                                @foreach (var product in productGroups[i])
                                {
                                    <div class="col-md-4 mb-4">
                                        <partial name="_ProductCardPartial" model="product" />
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
                
                <button class="carousel-control-prev" type="button" data-bs-target="#featuredProductsCarousel" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#featuredProductsCarousel" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                </button>
            </div>
        }
        else
        {
            <p class="text-center">@Localizer["No featured products available at the moment."]</p>
        }
    </div>
</section>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize featured products carousel
            var carousel = new bootstrap.Carousel(document.querySelector('#featuredProductsCarousel'), {
                interval: 5000,
                wrap: true
            });
        });
    </script>
}