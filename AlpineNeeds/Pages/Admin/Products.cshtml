@page
@model ProductsModel
@{
    ViewData["Title"] = "Product Management";
}

<div class="container">
    <partial name="_StatusMessage" />

    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Products</h2>
        <a asp-page="./ProductEdit"
            class="btn btn-primary">
            <i class="bi bi-plus-circle me-2"></i>Add Product
        </a>
    </div>

    <div class="table-responsive-wrapper">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>
                        <a asp-page="./Products"
                            asp-route-sortColumn="name"
                            asp-route-sortOrder="@(Model.SortColumn == "name" && Model.SortOrder == SortOrder.Ascending ? "desc" : "asc")"
                            asp-route-pageNumber="@Model.PageIndex"
                            class="text-dark text-decoration-none">
                            <div class="d-flex align-items-center">
                                <span>Name</span>
                                @if (Model.SortColumn == "name")
                                {
                                    <i
                                        class="bi @(Model.SortOrder == SortOrder.Ascending ? "bi-arrow-up" : "bi-arrow-down") ms-1"></i>
                                }
                                else
                                {
                                    <i class="bi bi-arrow-down-up ms-1"></i>
                                }
                            </div>
                        </a>
                    </th>
                    <th>Category</th>
                    <th>Price</th>
                    <th>Colors</th>
                    <th>Sizes</th>
                    <th class="text-end">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var product in Model.Items)
                {
                    <tr>
                        <td>@product.Name</td>
                        <td>@product.Category.Name</td>
                        <td>@product.Price.ToString("C")</td>
                        <td>@string.Join(", ", product.Colors)</td>
                        <td>@string.Join(", ", product.Sizes)</td>
                        <td class="text-end">
                            <div class="btn-group">
                                <a asp-page="./ProductEdit"
                                    asp-route-id="@product.Id"
                                    class="btn btn-sm btn-outline-primary">
                                    <i class="bi bi-pencil"></i>
                                </a>
                                <form method="post"
                                    asp-page-handler="DeleteProduct"
                                    class="d-inline"
                                    onsubmit="return confirm('Are you sure you want to delete this product?');">
                                    <input type="hidden"
                                        name="id"
                                        value="@product.Id" />
                                    <button type="submit"
                                        class="btn btn-sm btn-outline-danger">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </form>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <nav aria-label="Page navigation"
        class="mt-3">
        <ul class="pagination justify-content-center flex-wrap">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link"
                        asp-page="./Products"
                        asp-route-pageNumber="@(Model.PageIndex - 1)"
                        asp-route-sortColumn="@Model.SortColumn"
                        asp-route-sortOrder="@Model.SortOrder.ToString().ToLower()">Previous</a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Previous</span>
                </li>
            }

            @for (var i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                    <a class="page-link"
                        asp-page="./Products"
                        asp-route-pageNumber="@i"
                        asp-route-sortColumn="@Model.SortColumn"
                        asp-route-sortOrder="@Model.SortOrder.ToString().ToLower()">@i</a>
                </li>
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link"
                        asp-page="./Products"
                        asp-route-pageNumber="@(Model.PageIndex + 1)"
                        asp-route-sortColumn="@Model.SortColumn"
                        asp-route-sortOrder="@Model.SortOrder.ToString().ToLower()">Next</a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Next</span>
                </li>
            }
        </ul>
    </nav>
</div>

@section Scripts {
    <script>
        // Auto-hide alerts
        document.addEventListener('DOMContentLoaded', function () {
            setTimeout(function () {
                const alerts = document.querySelectorAll('.alert');
                alerts.forEach(function (alert) {
                    const bsAlert = new bootstrap.Alert(alert);
                    bsAlert.close();
                });
            }, 5000);
        });
    </script>
}
