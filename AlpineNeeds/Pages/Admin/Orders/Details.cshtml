@page "{id:int}"
@model AlpineNeeds.Pages.Admin.Orders.DetailsModel
@{
    ViewData["Title"] = $"Order #{Model.Order.Id} Details";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Order #@Model.Order.Id Details</h2>
        <a asp-page="./Index" class="btn btn-secondary">
            <i class="bi bi-arrow-left"></i> Back to Orders
        </a>
    </div>
    
    <partial name="_StatusMessage" />

    <div class="row g-4">
        <!-- Order Summary Card -->
        <div class="col-md-6">
            <div class="card h-100">
                <div class="card-header bg-light">
                    <h5 class="mb-0">Order Summary</h5>
                </div>
                <div class="card-body">
                    <div class="row mb-2">
                        <div class="col-5 text-muted">Order Number:</div>
                        <div class="col-7 fw-bold">#@Model.Order.Id</div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-5 text-muted">Order Date:</div>
                        <div class="col-7">@Model.Order.OrderDate.ToString("MMMM dd, yyyy HH:mm")</div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-5 text-muted">Customer:</div>
                        <div class="col-7">
                            @if (Model.Order.User != null)
                            {
                                <a asp-page="/Admin/Users" asp-route-userId="@Model.Order.UserId">
                                    @Model.Order.User.FullName
                                </a>
                            }
                            else
                            {
                                <span>Unknown User</span>
                            }
                        </div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-5 text-muted">Email:</div>
                        <div class="col-7">
                            @if (Model.Order.User != null)
                            {
                                <a href="mailto:@Model.Order.User.Email">@Model.Order.User.Email</a>
                            }
                        </div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-5 text-muted">Items:</div>
                        <div class="col-7">@Model.Order.OrderProducts.Count</div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-5 text-muted">Total:</div>
                        <div class="col-7 fw-bold">$@Model.Order.TotalPrice.ToString("F2")</div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Status Management Card -->
        <div class="col-md-6">
            <div class="card h-100">
                <div class="card-header bg-light">
                    <h5 class="mb-0">Status Management</h5>
                </div>
                <div class="card-body">
                    <div class="mb-4">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <h6 class="mb-0">Current Status:</h6>
                            <span class="badge @Model.GetStatusBadgeClass(Model.Order.Status)">@Model.Order.Status</span>
                        </div>
                    </div>
                    
                    <div class="status-timeline mb-4">
                        <div class="progress" style="height: 3px;">
                            <div class="progress-bar @Model.GetProgressBarClass()" role="progressbar" 
                                 style="width: @Model.GetProgressPercentage()%" 
                                 aria-valuenow="@Model.GetProgressPercentage()" aria-valuemin="0" aria-valuemax="100"></div>
                        </div>
                        <div class="d-flex justify-content-between mt-2">
                            @foreach (var status in Model.OrderStatusTimeline)
                            {
                                <div class="status-point @(Model.GetStatusPointClass(status))">
                                    <div class="status-icon">
                                        <i class="bi @(Model.IsStatusCompleted(status) ? "bi-check-circle-fill" : "bi-circle")"></i>
                                    </div>
                                    <div class="status-label small @(Model.IsCurrentStatus(status) ? "fw-bold" : "")">
                                        @status
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    
                    @if (!Model.Order.Status.ToString().Contains("Cancel") && Model.Order.Status != OrderStatus.Finished)
                    {
                        <form method="post" asp-page-handler="UpdateStatus">
                            <div class="input-group mb-3">
                                <select asp-for="NewStatus" class="form-select" asp-items="Model.AvailableStatuses"></select>
                                <button type="submit" class="btn btn-primary">Update Status</button>
                            </div>
                        </form>
                    }
                </div>
            </div>
        </div>
        
        <!-- Order Items Card -->
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-light">
                    <h5 class="mb-0">Order Items</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th style="width: 80px">Image</th>
                                    <th>Product</th>
                                    <th>Unit Price</th>
                                    <th>Quantity</th>
                                    <th>Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Order.OrderProducts)
                                {
                                    <tr>
                                        <td>
                                            @{ 
                                                var imgSrc = item.Product?.ProductImages?.FirstOrDefault()?.ImageUrl 
                                                    ?? "/images/products/placeholder.webp";
                                            }
                                            <img src="@imgSrc" alt="@item.Product.Name" class="img-thumbnail" style="max-height: 60px;" />
                                        </td>
                                        <td>
                                            <div class="fw-bold">
                                                @if (item.Product != null)
                                                {
                                                    <a asp-page="/Products/Details" asp-route-id="@item.ProductId">
                                                        @item.Product.Name
                                                    </a>
                                                }
                                                else
                                                {
                                                    <span>Product #@item.ProductId (Deleted)</span>
                                                }
                                            </div>
                                            @if (item.Product != null)
                                            {
                                                <div class="text-muted small">SKU: @item.Product.Id</div>
                                            }
                                        </td>
                                        <td>$@item.Price.ToString("F2")</td>
                                        <td>@item.Quantity</td>
                                        <td>$@((item.Price * item.Quantity).ToString("F2"))</td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot class="table-light">
                                <tr>
                                    <td colspan="4" class="text-end fw-bold">Total:</td>
                                    <td class="fw-bold">$@Model.Order.TotalPrice.ToString("F2")</td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Customer Information Card -->
        <div class="col-md-6">
            <div class="card">
                <div class="card-header bg-light">
                    <h5 class="mb-0">Shipping Information</h5>
                </div>
                <div class="card-body">
                    @if (Model.Order.ShippingAddress != null)
                    {
                        <address>
                            <strong>@Model.Order.User?.FullName</strong><br />
                            @Model.Order.ShippingAddress.AddressLine1<br />
                            @if (!string.IsNullOrEmpty(Model.Order.ShippingAddress.AddressLine2))
                            {
                                @Model.Order.ShippingAddress.AddressLine2<br />
                            }
                            @Model.Order.ShippingAddress.City, @Model.Order.ShippingAddress.State @Model.Order.ShippingAddress.ZipCode<br />
                            @Model.Order.ShippingAddress.Country<br />
                            @if (!string.IsNullOrEmpty(Model.Order.ShippingAddress.PhoneNumber))
                            {
                                @:Phone: @Model.Order.ShippingAddress.PhoneNumber
                            }
                        </address>
                    }
                    else
                    {
                        <div class="alert alert-warning">
                            No shipping address information available.
                        </div>
                    }
                </div>
            </div>
        </div>
        
        <!-- Billing Information Card -->
        <div class="col-md-6">
            <div class="card">
                <div class="card-header bg-light">
                    <h5 class="mb-0">Billing Information</h5>
                </div>
                <div class="card-body">
                    @if (Model.Order.BillingAddress != null)
                    {
                        <address>
                            <strong>@Model.Order.User?.FullName</strong><br />
                            @Model.Order.BillingAddress.AddressLine1<br />
                            @if (!string.IsNullOrEmpty(Model.Order.BillingAddress.AddressLine2))
                            {
                                @Model.Order.BillingAddress.AddressLine2<br />
                            }
                            @Model.Order.BillingAddress.City, @Model.Order.BillingAddress.State @Model.Order.BillingAddress.ZipCode<br />
                            @Model.Order.BillingAddress.Country<br />
                            @if (!string.IsNullOrEmpty(Model.Order.BillingAddress.PhoneNumber))
                            {
                                @:Phone: @Model.Order.BillingAddress.PhoneNumber
                            }
                        </address>
                    }
                    else if (Model.Order.ShippingAddress != null)
                    {
                        <div class="alert alert-info">
                            Same as shipping address.
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-warning">
                            No billing address information available.
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    
    <!-- Action Buttons -->
    <div class="mt-4 d-flex gap-2 justify-content-end">
        <button type="button" class="btn btn-outline-info" data-bs-toggle="modal" data-bs-target="#emailModal">
            <i class="bi bi-envelope"></i> Send Order Update
        </button>
        @if (Model.CanCancelOrder)
        {
            <button type="button" class="btn btn-outline-danger" data-bs-toggle="modal" data-bs-target="#cancelModal">
                <i class="bi bi-x-circle"></i> Cancel Order
            </button>
        }
    </div>
</div>

<!-- Email Modal -->
<div class="modal fade" id="emailModal" tabindex="-1" aria-labelledby="emailModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page-handler="SendEmail">
                <div class="modal-header">
                    <h5 class="modal-title" id="emailModalLabel">Send Order Update</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="emailSubject" class="form-label">Subject</label>
                        <input type="text" class="form-control" id="emailSubject" name="subject" 
                               value="Update on your order #@Model.Order.Id" required>
                    </div>
                    <div class="mb-3">
                        <label for="emailMessage" class="form-label">Message</label>
                        <textarea class="form-control" id="emailMessage" name="message" rows="5" required></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Send Email</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Cancel Order Modal -->
<div class="modal fade" id="cancelModal" tabindex="-1" aria-labelledby="cancelModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page-handler="CancelOrder">
                <div class="modal-header">
                    <h5 class="modal-title" id="cancelModalLabel">Cancel Order</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to cancel order #@Model.Order.Id? This action cannot be undone.</p>
                    <div class="mb-3">
                        <label for="cancelReason" class="form-label">Cancellation Reason</label>
                        <textarea class="form-control" id="cancelReason" name="reason" rows="3" required></textarea>
                    </div>
                    <div class="mb-3 form-check">
                        <input type="checkbox" class="form-check-input" id="notifyCustomer" name="notifyCustomer" checked>
                        <label class="form-check-label" for="notifyCustomer">Notify customer via email</label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-danger">Cancel Order</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .status-timeline {
            position: relative;
            padding: 20px 0;
        }
        
        .status-point {
            display: flex;
            flex-direction: column;
            align-items: center;
            position: relative;
            width: 16.66%;
            z-index: 1;
        }
        
        .status-icon {
            font-size: 1.2rem;
            margin-bottom: 5px;
        }
        
        .status-label {
            text-align: center;
            max-width: 80px;
        }
        
        .status-active .status-icon {
            color: var(--bs-primary);
        }
        
        .status-completed .status-icon {
            color: var(--bs-success);
        }
        
        .status-current .status-icon {
            color: var(--bs-primary);
            font-size: 1.4rem;
        }
        
        .status-cancelled .status-icon {
            color: var(--bs-danger);
        }
    </style>
}
