@page
@model AlpineNeeds.Pages.Admin.Orders.IndexModel
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = Localizer["Order Management"];
}

<div class="container-fluid">
    <h2 class="mb-4">@Localizer["Order Management"]</h2>

    <!-- Filter Panel -->
    <div class="card mb-4">
        <div class="card-header bg-light">
            <h5 class="mb-0">@Localizer["Filters"]</h5>
        </div>
        <div class="card-body">
            <form method="get" id="filterForm">
                <div class="row g-3">
                    <div class="col-md-6 col-lg-3">
                        <label asp-for="DateStart" class="form-label">@Localizer["Date From"]</label>
                        <input asp-for="DateStart" type="date" class="form-control" />
                    </div>
                    <div class="col-md-6 col-lg-3">
                        <label asp-for="DateEnd" class="form-label">@Localizer["Date To"]</label>
                        <input asp-for="DateEnd" type="date" class="form-control" />
                    </div>
                    <div class="col-md-6 col-lg-3">
                        <label asp-for="StatusFilter" class="form-label">@Localizer["Order Status"]</label>
                        <select asp-for="StatusFilter" asp-items="Html.GetEnumSelectList<OrderStatus>()" class="form-select" multiple>
                        </select>
                    </div>
                    <div class="col-md-6 col-lg-3">
                        <label asp-for="SearchTerm" class="form-label">@Localizer["Search"]</label>
                        <input asp-for="SearchTerm" type="text" class="form-control" placeholder="@Localizer["Order #, Customer name or email"]" />
                    </div>
                    <div class="col-md-6 col-lg-3">
                        <label asp-for="MinAmount" class="form-label">@Localizer["Min Amount"]</label>
                        <input asp-for="MinAmount" type="number" step="0.01" class="form-control" />
                    </div>
                    <div class="col-md-6 col-lg-3">
                        <label asp-for="MaxAmount" class="form-label">@Localizer["Max Amount"]</label>
                        <input asp-for="MaxAmount" type="number" step="0.01" class="form-control" />
                    </div>
                    <div class="col-12">
                        <div class="d-flex justify-content-end">
                            <a href="/Admin/Orders" class="btn btn-secondary me-2">@Localizer["Reset"]</a>
                            <button type="submit" class="btn btn-primary">@Localizer["Apply Filters"]</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Orders Table -->
    <div class="card">
        <div class="card-body">
            @if (!Model.Orders.Any())
            {
                <div class="alert alert-info">@Localizer["No orders found matching your criteria."]</div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead class="table-light">
                            <tr>
                                <th>
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="selectAll">
                                    </div>
                                </th>
                                <th>
                                    <a asp-page="./Index" asp-route-sortField="Id" asp-route-sortOrder="@Model.SortOrderForLink("Id")">
                                        @Localizer["Order #"]
                                        @if (Model.SortField == "Id")
                                        {
                                            <i class="bi @(Model.SortOrder == "asc" ? "bi-sort-up" : "bi-sort-down")"></i>
                                        }
                                    </a>
                                </th>
                                <th>
                                    <a asp-page="./Index" asp-route-sortField="OrderDate" asp-route-sortOrder="@Model.SortOrderForLink("OrderDate")">
                                        @Localizer["Date"]
                                        @if (Model.SortField == "OrderDate")
                                        {
                                            <i class="bi @(Model.SortOrder == "asc" ? "bi-sort-up" : "bi-sort-down")"></i>
                                        }
                                    </a>
                                </th>
                                <th>@Localizer["Customer"]</th>
                                <th>@Localizer["Items"]</th>
                                <th>
                                    <a asp-page="./Index" asp-route-sortField="TotalPrice" asp-route-sortOrder="@Model.SortOrderForLink("TotalPrice")">
                                        @Localizer["Total"]
                                        @if (Model.SortField == "TotalPrice")
                                        {
                                            <i class="bi @(Model.SortOrder == "asc" ? "bi-sort-up" : "bi-sort-down")"></i>
                                        }
                                    </a>
                                </th>
                                <th>
                                    <a asp-page="./Index" asp-route-sortField="Status" asp-route-sortOrder="@Model.SortOrderForLink("Status")">
                                        @Localizer["Status"]
                                        @if (Model.SortField == "Status")
                                        {
                                            <i class="bi @(Model.SortOrder == "asc" ? "bi-sort-up" : "bi-sort-down")"></i>
                                        }
                                    </a>
                                </th>
                                <th>@Localizer["Actions"]</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in Model.Orders)
                            {
                                <tr class="@GetStatusClass(order.Status)">
                                    <td>
                                        <div class="form-check">
                                            <input class="form-check-input order-checkbox" type="checkbox" value="@order.Id">
                                        </div>
                                    </td>
                                    <td>@order.Id</td>
                                    <td>@order.OrderDate.ToString("MMM dd, yyyy HH:mm")</td>
                                    <td>
                                        @if (order.User != null)
                                        {
                                            @order.User.FullName
                                        }
                                        else
                                        {
                                            <span>@Localizer["Unknown User"]</span>
                                        }
                                    </td>
                                    <td>@order.OrderProducts.Count</td>
                                    <td>@order.TotalPrice.ToBgCurrency()</td>
                                    <td>
                                        <span class="badge @GetStatusBadgeClass(order.Status)">@Localizer[order.Status.ToString()]</span>
                                    </td>
                                    <td>
                                        <div class="btn-group">
                                            <a asp-page="./Details" asp-route-id="@order.Id" class="btn btn-sm btn-outline-primary">
                                                <i class="bi bi-pencil"></i>
                                            </a>
                                            <button type="button" class="btn btn-sm btn-outline-danger" 
                                                    data-bs-toggle="modal" 
                                                    data-bs-target="#cancelOrderModal" 
                                                    data-order-id="@order.Id"
                                                    @(IsOrderCancelable(order.Status) ? "" : "disabled")>
                                                <i class="bi bi-x-lg"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Pagination -->
                <nav aria-label="Page navigation">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            @Localizer["Showing {0} to {1} of {2} orders", (Model.CurrentPage - 1) * Model.PageSize + 1, Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalCount), Model.TotalCount]
                        </div>
                        <ul class="pagination">
                            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                                <a class="page-link" asp-page="./Index" asp-route-pageNumber="1" asp-all-route-data="@Model.RouteData">@Localizer["First"]</a>
                            </li>
                            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                                <a class="page-link" asp-page="./Index" asp-route-pageNumber="@(Model.CurrentPage - 1)" asp-all-route-data="@Model.RouteData">@Localizer["Previous"]</a>
                            </li>

                            @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Math.Max(1, Model.CurrentPage - 2) + 4, Model.TotalPages); i++)
                            {
                                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                    <a class="page-link" asp-page="./Index" asp-route-pageNumber="@i" asp-all-route-data="@Model.RouteData">@i</a>
                                </li>
                            }

                            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                                <a class="page-link" asp-page="./Index" asp-route-pageNumber="@(Model.CurrentPage + 1)" asp-all-route-data="@Model.RouteData">@Localizer["Next"]</a>
                            </li>
                            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                                <a class="page-link" asp-page="./Index" asp-route-pageNumber="@Model.TotalPages" asp-all-route-data="@Model.RouteData">@Localizer["Last"]</a>
                            </li>
                        </ul>
                    </div>
                </nav>
            }

            <!-- Batch Actions -->
            <div class="mt-3">
                <form method="post" id="batchActionForm" asp-page-handler="BatchAction">
                    <input type="hidden" id="selectedOrderIds" name="orderIds" value="" />
                    <div class="input-group">
                        <select name="action" class="form-select w-auto" id="batchAction">
                            <option value="">-- @Localizer["Select Action"] --</option>
                            <option value="MarkAsConfirmed">@Localizer["Mark as Confirmed"]</option>
                            <option value="MarkAsPreparing">@Localizer["Mark as Preparing"]</option>
                            <option value="MarkAsPacked">@Localizer["Mark as Packed"]</option>
                            <option value="MarkAsDelivered">@Localizer["Mark as Delivered"]</option>
                            <option value="MarkAsFinished">@Localizer["Mark as Finished"]</option>
                            <option value="GenerateInvoices">@Localizer["Generate Invoices"]</option>
                            <option value="GeneratePackingSlips">@Localizer["Generate Packing Slips"]</option>
                        </select>
                        <button type="button" id="applyBatchAction" class="btn btn-primary" disabled>@Localizer["Apply to Selected"]</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Cancel Order Modal -->
<div class="modal fade" id="cancelOrderModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page-handler="CancelOrder">
                <input type="hidden" id="cancelOrderId" name="orderId" value="" />
                <div class="modal-header">
                    <h5 class="modal-title">@Localizer["Cancel Order"]</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>@Localizer["Are you sure you want to cancel this order? This action cannot be undone."]</p>
                    <div class="mb-3">
                        <label for="cancellationReason" class="form-label">@Localizer["Cancellation Reason"]</label>
                        <textarea class="form-control" id="cancellationReason" name="reason" rows="3" required></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Localizer["Close"]</button>
                    <button type="submit" class="btn btn-danger">@Localizer["Cancel Order"]</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Select all checkbox
            const selectAllCheckbox = document.getElementById('selectAll');
            const orderCheckboxes = document.querySelectorAll('.order-checkbox');
            const applyBatchButton = document.getElementById('applyBatchAction');
            
            selectAllCheckbox.addEventListener('change', function() {
                orderCheckboxes.forEach(checkbox => {
                    checkbox.checked = selectAllCheckbox.checked;
                });
                updateApplyButtonState();
            });
            
            orderCheckboxes.forEach(checkbox => {
                checkbox.addEventListener('change', updateApplyButtonState);
            });
            
            // Update the apply button state based on checkbox selection
            function updateApplyButtonState() {
                const anyChecked = Array.from(orderCheckboxes).some(checkbox => checkbox.checked);
                applyBatchButton.disabled = !anyChecked;
            }
            
            // Handle batch action button
            document.getElementById('applyBatchAction').addEventListener('click', function() {
                const selectedIds = Array.from(orderCheckboxes)
                    .filter(checkbox => checkbox.checked)
                    .map(checkbox => checkbox.value);
                    
                if (selectedIds.length === 0) {
                    alert('Please select at least one order');
                    return;
                }
                
                const action = document.getElementById('batchAction').value;
                if (!action) {
                    alert('Please select an action');
                    return;
                }
                
                document.getElementById('selectedOrderIds').value = selectedIds.join(',');
                document.getElementById('batchActionForm').submit();
            });
            
            // Set order ID in cancel modal
            $('#cancelOrderModal').on('show.bs.modal', function (event) {
                const button = $(event.relatedTarget);
                const orderId = button.data('order-id');
                $('#cancelOrderId').val(orderId);
            });
        });
    </script>
}

@functions {
    private string GetStatusClass(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Placed => "table-info",
            OrderStatus.Confirmed => "table-primary",
            OrderStatus.Preparing => "table-warning",
            OrderStatus.Packed => "table-secondary",
            OrderStatus.Delivered => "table-success",
            OrderStatus.Finished => "table-light",
            OrderStatus.CustomerCanceled => "table-danger",
            OrderStatus.OutOfStock => "table-danger",
            _ => ""
        };
    }
    
    private string GetStatusBadgeClass(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Placed => "bg-info",
            OrderStatus.Confirmed => "bg-primary",
            OrderStatus.Preparing => "bg-warning text-dark",
            OrderStatus.Packed => "bg-secondary",
            OrderStatus.Delivered => "bg-success",
            OrderStatus.Finished => "bg-light text-dark",
            OrderStatus.CustomerCanceled => "bg-danger",
            OrderStatus.OutOfStock => "bg-danger",
            _ => "bg-secondary"
        };
    }
    
    private bool IsOrderCancelable(OrderStatus status)
    {
        return status == OrderStatus.Placed || 
               status == OrderStatus.Confirmed || 
               status == OrderStatus.Preparing;
    }
}
