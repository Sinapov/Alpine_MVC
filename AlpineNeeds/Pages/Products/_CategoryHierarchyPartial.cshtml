@model List<AlpineNeeds.Pages.Products.CategoryViewModel>

@foreach (var categoryViewModel in Model)
{
    <div class="category-item" style="margin-left: @(categoryViewModel.Level * 15)px;">
        <div class="d-flex align-items-center">
            @if (categoryViewModel.HasChildren)
            {
                <button type="button" class="btn btn-sm category-toggle me-1" style="padding: 0; line-height: 1;">
                    <i class="bi bi-caret-down-fill"></i>
                </button>
            }
            else
            {
                <div style="width: 20px;"></div>
            }
            <div class="form-check m-0">
                <input class="form-check-input category-checkbox" type="checkbox" 
                       id="category-@categoryViewModel.Category.Id" 
                       name="CategoryIds" 
                       value="@categoryViewModel.Category.Id"
                       data-category-id="@categoryViewModel.Category.Id"
                       data-parent-id="@categoryViewModel.Category.ParentCategoryId"
                       @(Context.Request.Query["CategoryIds"].Contains(categoryViewModel.Category.Id.ToString()) ? "checked" : "")
                       data-has-children="@categoryViewModel.HasChildren.ToString().ToLower()">
                <label class="form-check-label" for="category-@categoryViewModel.Category.Id">
                    @categoryViewModel.Category.Name
                </label>
            </div>
        </div>
        
        @if (categoryViewModel.HasChildren)
        {
            <div class="subcategories">
                @await Html.PartialAsync("_CategoryHierarchyPartial", categoryViewModel.Children)
            </div>
        }
    </div>
}